name: Benchmark

on:
  push:
    branches:
    # FIXME: Uncomment
    # - main
  # pull_request:
  #   branches:
  #     - dev
  schedule:
    - cron: '0 0,8,16 * * *'
  workflow_dispatch:
    inputs:
      push:
        description: 'Push generated results to gh-pages branch'
        required: false
        default: true
        type: boolean

# Do not run benchmarks in parallel to avoid any result collision
concurrency:
  group: benchmark
  cancel-in-progress: false

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install asv

    - name: Configure Git
      run: |
        git config --global user.name "$GIT_AUTHOR_NAME"
        git config --global user.email "$GIT_AUTHOR_EMAIL"
      env:
        GIT_AUTHOR_NAME: ${{ github.actor }}
        GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com

    - name: Pull asv results
      run: |
        git checkout results && git checkout main
        git checkout results .asv/results

    - name: Run benchmarks
      # Give 10min for other steps. GitHub Actions allow 360min at max.
      timeout-minutes: 350
      run: |
        asv machine --machine "github-hosted-runner" --yes
        asv run HASHFILE:commits.txt $ASV_RUN_OPTIONS
      env:
        ASV_RUN_OPTIONS: "--skip-existing-successful --parallel"

    - name: Run fewer benchmarks on PR
      # Run only a small set of benchmarks for sanity check.
      if: github.event_name == 'pull_request'
      # Give 10min for other steps. GitHub Actions allow 360 at the maximum.
      timeout-minutes: 350
      run: |
        asv machine --machine "github-hosted-runner" --yes
        asv run master^!
      env:
        ASV_RUN_OPTIONS: "--skip-existing-successful --parallel -v -e"

    - name: Push results and gh-pages
      # Don't push on PRs
      if: always() && github.event_name != 'pull_request'
      run: |
        # Push new page to `gh-pages` branch
        asv publish
        git fetch origin gh-pages:gh-pages
        asv gh-pages
        # Push new results to `results` branch
        mv .asv/results new_results
        git checkout $GIT_BRANCH_RESULTS
        rm -rf .asv/results
        mv new_results .asv/results
        git add .asv/results
        git commit -m "Add results from $(git rev-parse --short $GITHUB_SHA)" && git push origin $GIT_BRANCH_RESULTS || echo "No new results to push :)"
      env:
        GIT_BRANCH_RESULTS: results
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
{"project": "pyg", "project_url": "https://pyg.org", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"1889": "9eeb18d61feb56cc98cd81e46af2270d768d53f1", "2027": "8313ae159dcd50e49690e60badae2330c32cfb2b", "2141": "964530024bbeb52a9bb014a60f29b499e646cad9", "2406": "c99e0ea85064779219084f68b515150c7f3bb8a4", "2680": "7b3f16b4bbf9bf9560a4fd25095fbab6810ac790", "2702": "253bd1457110ec0030aa7f6ede30f2fcec9fc494", "2870": "636dbc48d264cc3e75eda3f5d7947e815ffbd907", "3166": "6de2a1bc9c56060ef5afb6e4ba06c8cce86a2269", "3188": "e4589bac6e710b18496f1e0b750c5ed4446fe50a", "3228": "751a411ee9d7f396ca070c19f948a72d78e97089", "3505": "d5aff37604c8e3247f5e807f2ba0ec6eeb4c661b", "3702": "0b2a01c2bfd255b17f15657578ab9bf143212973", "4296": "5c2399d06cfb921f3168ced69a1406746a2a2447", "4528": "58ff9037e4c3dd4653aa37a387c03a37a8f0d546", "4598": "881d5ba2aefc26328eeeaa17fd7ef6daaae06ef4", "4765": "a83d38dbd0e51599139fb86af2371aef4c3ad4ca", "4821": "5bb5db9e105e6531ac4da22f2674f5614e2d1732", "4948": "9ad551ff68dd1172d140973598c90d696aa7e152", "5298": "cc071b7c4bd632ace8919a81d7049b984e09f0ba", "5807": "31dca649cca1c329efa98ef608953538ddff7b74", "5894": "df0612bca76b14464b13c86759eec0c56ebc8154", "6164": "c57eb7d60d672462ac3eaa6476c2f5fe78dc9f3c", "6178": "4b531e5168555c5c2600cc616a21aa050306efb4", "6606": "e6b8d6427ad930c6117298006d7eebea0a37ceac", "7054": "d86de00a98173653a6158fc40238d34d0fb57cc1", "7143": "5455b528d58e7d5b57f0046313065c160c4d4caa", "7693": "c5152eae0de1bfaec1b60a7f931e0c928bb6df3c", "7714": "82a3bab57e4d5b8695e546e56536bee37545642e", "8168": "101ed2cb5cc15344f41dc2f062b5284d8327dece", "8718": "d47d9cde477e1ab25821178968538eddeabc351a", "9766": "97d55577f1d0bf33c1bfbe0ef864923ad5cb844d", "12419": "07bf02f6bd871d3e1571a995ec53da461c11a11c", "15324": "ca4e5f8e308cf4ee7a221cb0979bb12d9e37a318", "19908": "dd0610a95935a4d8b00974464251190356084118", "20838": "ff9fb3d7cdbaa2f2b8a848fb6cc5f4c3f465118c", "21734": "10f640f6243e9d6e69bbb41405a1792b54f741e6", "21739": "51f99c3bd60a799a45522b2eda075be86f4c02b1", "21740": "93d5066257e7b366f297fa2aa8bdd1e781a6189a", "21787": "788fc10ae1351ada46ce4b17a096a55d5521c4db", "21789": "e90aa0c842b4bf77441c10e08342faa75476da90", "21790": "67d48931dee0e849a2d5e1063a68314c1401d919", "21794": "d974f519be26d0356d538237ffb7c36fd9a73e3d", "21801": "1e57a6c69cf15868bccc10b79479fdc4e7468211", "21809": "c1bffa145a90c563409d937932e887fe45fa9fa0", "21812": "d90842d6f38e111d14353449fef8eeac54d52994", "21818": "e2f1164ba3dc17cf2d2af2222171f01f27d12aa4", "21826": "464d177eb716a035cd9501afe4fa9c80f07b071e", "21828": "4b9cb65857d29e0f8a68676e25b8b5455c3e7e81", "21830": "c27d14a3650eb59d0e8ef8066422398e37f06b0c"}, "revision_to_date": {"1889": 1527237156000, "2027": 1534165740000, "2141": 1540007891000, "2406": 1545136515000, "2680": 1547578922000, "2702": 1548423127000, "2870": 1551978830000, "3166": 1554100892000, "3188": 1554182914000, "3228": 1554441998000, "3505": 1556522735000, "3702": 1558511934000, "4296": 1561817893000, "4528": 1567064345000, "4598": 1570176475000, "4765": 1580817773000, "4821": 1582039081000, "4948": 1584467720000, "5298": 1590382943000, "5807": 1594103054000, "5894": 1596633598000, "6164": 1606460050000, "6178": 1606920803000, "6606": 1617954430000, "7054": 1623915629000, "7143": 1624695909000, "7693": 1631516432000, "7714": 1631774083000, "8168": 1635246629000, "8718": 1640155409000, "9766": 1647084760000, "12419": 1660732188000, "15324": 1669877069000, "19908": 1679559864000, "20838": 1680252540000, "21734": 1685706997000, "21739": 1685710428000, "21740": 1685710480000, "21787": 1685866260000, "21789": 1685866332000, "21790": 1685866358000, "21794": 1685867013000, "21801": 1685870867000, "21809": 1685873603000, "21812": 1685876425000, "21818": 1685880579000, "21826": 1685886902000, "21828": 1685889251000, "21830": 1685894640000}, "params": {"arch": [null, "x86_64"], "cpu": ["Intel(R) Xeon(R) CPU E5-2690 v4 @ 2.60GHz", null], "machine": ["codespaces-v100", "github-hosted-runner"], "num_cpu": ["6", null], "os": ["Linux 5.15.0-1038-azure", null], "ram": ["115403744", null], "python": ["3.11"], "branch": ["master", "version_2_3_1"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Xeon(R) CPU E5-2690 v4 @ 2.60GHz", "machine": "codespaces-v100", "num_cpu": "6", "os": "Linux 5.15.0-1038-azure", "ram": "115403744", "python": "3.11", "branch": "master"}, {"machine": "github-hosted-runner", "python": "3.11", "branch": "master", "arch": null, "cpu": null, "num_cpu": null, "os": null, "ram": null}, {"machine": "github-hosted-runner", "python": "3.11", "branch": "version_2_3_1", "arch": null, "cpu": null, "num_cpu": null, "os": null, "ram": null}], "benchmarks": {"bench_import.ImportBenchmark.timeraw_import": {"code": "class ImportBenchmark:\n    def timeraw_import(self):\n        return \"import torch_geometric\"", "min_run_count": 2, "name": "bench_import.ImportBenchmark.timeraw_import", "number": 1, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6bf9800913acbba040375b0422bc9d8ca4358900c1d15ac6aa3569db7998be98", "warmup_time": -1}, "bench_map.MapIndex.track_map_index_exclusive": {"code": "class MapIndex:\n    def track_map_index_exclusive(self, output):\n        src, index = output\n        ts = benchmark(\n            funcs=[map_index],\n            func_names=['max_index'],\n            args=(src, index[:50_000], None, False),\n            num_steps=100,\n            num_warmups=50,\n        )\n        return ts[0][1]\n\n    def setup(self):\n        if not WITH_MAP_INDEX:\n            raise NotImplementedError\n\n    def setup_cache(self):\n        device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        src = torch.randint(0, 100_000_000, (100_000, ), device=device)\n        index = src.unique()\n        return src, index", "name": "bench_map.MapIndex.track_map_index_exclusive", "param_names": [], "params": [], "setup_cache_key": "bench_map:67", "timeout": 60.0, "type": "track", "unit": "unit", "version": "c5315027aaff9766d1089420bc0892904f7e5e03064eca09f71a7351c375546e"}, "bench_map.MapIndex.track_map_index_inclusive": {"code": "class MapIndex:\n    def track_map_index_inclusive(self, output):\n        src, index = output\n        ts = benchmark(\n            funcs=[map_index],\n            func_names=['map_index'],\n            args=(src, index, None, True),\n            num_steps=100,\n            num_warmups=50,\n        )\n        return ts[0][1]\n\n    def setup(self):\n        if not WITH_MAP_INDEX:\n            raise NotImplementedError\n\n    def setup_cache(self):\n        device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        src = torch.randint(0, 100_000_000, (100_000, ), device=device)\n        index = src.unique()\n        return src, index", "name": "bench_map.MapIndex.track_map_index_inclusive", "param_names": [], "params": [], "setup_cache_key": "bench_map:67", "timeout": 60.0, "type": "track", "unit": "unit", "version": "8d0ea0bfec0e3ab3a733d47e67b73a373d746c7ec97bb1fb26a12bb94cd8ab87"}, "bench_map.TrivialMap.track_trivial_map_exclusive": {"code": "class TrivialMap:\n    def track_trivial_map_exclusive(self, output):\n        src, index = output\n        ts = benchmark(\n            funcs=[trivial_map],\n            func_names=['trivial_map'],\n            args=(src, index[:50_000], None, False),\n            num_steps=100,\n            num_warmups=50,\n        )\n        return ts[0][1]\n\n    def setup_cache(self):\n        device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        src = torch.randint(0, 100_000_000, (100_000, ), device=device)\n        index = src.unique()\n        return src, index", "name": "bench_map.TrivialMap.track_trivial_map_exclusive", "param_names": [], "params": [], "setup_cache_key": "bench_map:33", "timeout": 60.0, "type": "track", "unit": "unit", "version": "518d059259482a61057653b029c947d55a9b9b7fd3d848f81439457127cccca0"}, "bench_map.TrivialMap.track_trivial_map_inclusive": {"code": "class TrivialMap:\n    def track_trivial_map_inclusive(self, output):\n        src, index = output\n        ts = benchmark(\n            funcs=[trivial_map],\n            func_names=['trivial_map'],\n            args=(src, index, None, True),\n            num_steps=100,\n            num_warmups=50,\n        )\n        return ts[0][1]\n\n    def setup_cache(self):\n        device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        src = torch.randint(0, 100_000_000, (100_000, ), device=device)\n        index = src.unique()\n        return src, index", "name": "bench_map.TrivialMap.track_trivial_map_inclusive", "param_names": [], "params": [], "setup_cache_key": "bench_map:33", "timeout": 60.0, "type": "track", "unit": "unit", "version": "2a666bce6396aa377c37bc13dc8976e20dafc5598ffb74adea62f39c70fc0780"}, "bench_scatter.Scatter.track_scatter": {"code": "class Scatter:\n    def track_scatter(self, output, n):\n        x, index, device, num_nodes = output\n        ts = benchmark(\n            funcs=[pytorch_scatter, own_scatter, optimized_scatter],\n            func_names=['PyTorch', 'torch_scatter', 'Optimized'],\n            args=(x, index, num_nodes, n),\n            num_steps=100 if device == 'cpu' else 1000,\n            num_warmups=50 if device == 'cpu' else 500,\n        )\n        return ts\n\n    def setup_cache(self):\n        device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        num_nodes, num_edges = 1_000, 50_000\n        x = torch.randn(num_edges, 64, device=device)\n        index = torch.randint(num_nodes, (num_edges, ), device=device)\n        return x, index, device, num_nodes", "name": "bench_scatter.Scatter.track_scatter", "param_names": ["param1"], "params": [["'sum'"]], "setup_cache_key": "bench_scatter:56", "timeout": 60.0, "type": "track", "unit": "unit", "version": "b35a85f416adc4f3ef4409cdce86a297a2a243687a61feca835364dce29afdb7"}}, "machines": {"codespaces-v100": {"arch": "x86_64", "cpu": "Intel(R) Xeon(R) CPU E5-2690 v4 @ 2.60GHz", "machine": "codespaces-v100", "num_cpu": "6", "os": "Linux 5.15.0-1038-azure", "ram": "115403744", "version": 1}, "github-hosted-runner": {"machine": "github-hosted-runner", "version": 1}}, "tags": {"0.1.1": 1889, "0.3.0": 2027, "0.3.1": 2141, "1.0.0": 2406, "1.0.1": 2680, "1.0.2": 2702, "1.0.3": 2870, "1.1.0": 3166, "1.1.1": 3188, "1.1.2": 3228, "1.2.0": 3505, "1.2.1": 3702, "1.3.0": 4296, "1.3.1": 4528, "1.3.2": 4598, "1.4.1": 4765, "1.4.2": 4821, "1.4.3": 4948, "1.5.0": 5298, "1.6.0": 5807, "1.6.1": 5894, "1.6.2": 6164, "1.6.3": 6178, "1.7.0": 6606, "1.7.1": 7054, "1.7.2": 7143, "2.0.0": 7693, "2.0.1": 7714, "2.0.2": 8168, "2.0.3": 8718, "2.0.4": 9766, "2.1.0": 12419, "2.2.0": 15324, "2.3.0": 19908, "2.3.1": 20838}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}